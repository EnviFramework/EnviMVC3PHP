all:
  ## Markdown Configuration ##
  ## This is the string used to close tags for HTML elements with no content such as <br> and <hr>. The default value creates XML-style empty element tags which are also valid in HTML 5.
  empty_element_suffix: " />"
  
  ## This is the width of a tab character on input. Changing this will affect how many spaces a tab character represents.
  tab_width: 4
  
  ## Setting this variable to true will prevent HTML tags in the input from being passed to the output.
  no_markup: false

  ## Setting this variable to true will prevent HTML entities (such as &lt;) from being passed verbatim in the output as it is the standard with Markdown. Instead, the HTML output will be &amp;tl; and once shown in shown the browser it will match perfectly what was written.
  no_entities: false
  
  ## Setting this variable to true will prevent HTML entities (such as &lt;) from being passed verbatim in the output as it is the standard with Markdown. Instead, the HTML output will be &amp;tl; and once shown in shown the browser it will match perfectly what was written.
  predef_urls:
  
  ## Use predef_titles to set the title of the link references passed in predef_urls. As for predef_urls, the key is the reference name.
  predef_titles:
  
  ## Markdown Extra Configuration ##
  ## A prefix for the id attributes generated by footnotes. This is useful if you have multiple Markdown documents displayed inside one HTML document to avoid footnote ids to clash each oth
  fn_id_prefix: ""
  ## An optional title attribute for footnotes links and backlinks. Browsers usually show this as a tooltip when the mouse is over the link.
  fn_link_title: ""
  fn_backlink_title: ""
  ## The class attribute to use for footnotes links and backlinks.
  fn_link_class: "footnote-ref"
  fn_backlink_class: "footnote-backref"
  ## An optional prefix for the class names associated with fenced code blocks. This will be prepended to the class name if you write your fenced code block this way:
  code_class_prefix: ""
  ## When set to false (the default), attributes for code blocks will go on the <code> tag; setting this to true will put attributes on the <pre> tag instead.
  code_attr_on_pr: false
  ## You can predefine abbreviations by setting predef_abbr to a list of abbreviations where the key is the text of the abbreviation and the value is the expanded name.
  predef_abbr:
  
  ## キャッシュの有無: enable caching
  is_compile_cache: true
  
  ## 必ずコンパイルするかどうか:always compiled
  is_force_compile: false
  
  ## ファイルが新しければキャッシュを作り直す
  use_intelligence_compile: true
  
  ## compile_idに自動付加するLessファイルのバージョン番号(これを更新すると、再コンパイルされます)
  ## The version number of the Less files to be automatically added to compile_id (If you update it, it will be recompiled)
  file_version: "1.0"
  
  ## キャッシュの保存先
  cache_path: "<?php echo ENVI_MVC_CACHE_PATH;?>"
  
  ## Markdown Extra拡張記法を使用する
  use_extra: true
dev:
  ## キャッシュの有無
  is_compile_cache: true
  ## 必ずコンパイルするかどうか
  is_force_compile: true

