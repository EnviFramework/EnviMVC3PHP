SCHEMA:
  ## <?php $app_name = substr(basename(__FILE__), 0, strlen(basename(__FILE__))-strlen('_schema.yml')); ?>

  # テーブル名
  sample_table_name:
    # クラス名(省略可能。省略した場合はテーブル名のパスカルケース)
    class_name: "SampleClassName"
    # スキーマ情報
    schema:
      # カラム名
      id:
        # カラムの型を指定します
        type: int
        # 主キーの場合は下記のように記載します
        primary: PRIMARY
        # 通常のインデックスの場合は下記のように記載します
        index:
          - idx_id
        # 複数貼ることもできます
          - idx_id2
        # uniqueインデックスの場合は下記のように記載します
        unique:
          - uq_id
        not_null: true
        auto_increment: true
        # 複数貼ることもできます
          - idx_id2

        # デフォルトの値
        default: NULL
      # カラム名
      id2:
        # カラムの型を指定します
        type: int
        # 主キーが複数ある場合は、全て記載してください
        primary: PRIMARY
        # デフォルトの値
        default: 0
      # 使用するインスタンス名を指定します(省略可能、省略した場合はデフォルを使用)
      instance_name: "command_log"
      # テーブル定義から自動取得するかどうか(省略可能、省略した場合はデフォルを使用)
      auto_schema: false

DIRECTORY:
  # モデルを保存するdirectory
  model_dir: "<?php $ds = DIRECTORY_SEPARATOR; echo realpath(realpath(dirname(dirname(__FILE__)))."{$ds}apps{$ds}{$app_name}{$ds}libs{$ds}models").$ds; ?>"

SETTING:
  #デフォルトのインスタンス名
  default_instance_name: "default_master"
  #マジックメソッドを利用したSetterGetterを使用するかどうか
  default_magic_method: true
  # データーベース定義
  database_yaml: "<?php echo realpath(dirname(dirname(__FILE__))).$ds.'config'.$ds.$app_name?>_databases.yml"
  # 環境
  env: "dev"
  # デフォルトのauto_schema
  default_auto_schema: true
  # auto_schemaの結果を反映した、yamlファイルを出力するかどうか
  reverse_yaml: true
  
  # OrMapperが所属するデフォルトのネームスペース
  # PHP 5.3以降ではネームスペースが使用できるようになりました。
  # model_name_space: models
  model_name_space: ""
  
  # OrMapperのベースクラスがが所属するデフォルトのネームスペース
  # model_base_name_space: models\om
  model_base_name_space: ""
